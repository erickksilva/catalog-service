plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'


}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}


ext {
//    set('springCloudVersion', "2021.0.3")
    set('springCloudVersion', "2022.0.4")
//    set('testcontainersVersion', "1.17.3")
}

dependencies {
// config server cliente
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.retry:spring-retry'
// flywaydb
    implementation 'org.flywaydb:flyway-core'
    //
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//  Spring actuador
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//  Spring JDBC
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

//   Banco de dados POSTGRES
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

//  test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.testcontainers:postgresql'


}


// config server cliente
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

bootBuildImage {
    imageName = "${project.name}"
    environment = ["BP_JVM_VERSION": "17.*"]

    docker {
        publishRegistry {
            username = project.findProperty("registryUsername")
            password = project.findProperty("registryToken")
            url = project.findProperty("registryUrl")
        }
    }
}

bootRun {
    systemProperty 'spring.profiles.active', 'testdata'
}

tasks.named('test') {
    useJUnitPlatform()
}




